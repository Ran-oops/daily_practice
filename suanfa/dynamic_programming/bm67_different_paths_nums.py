"""BM67 不同路径的数目(一)
一个机器人在m×n大小的地图的左上角（起点）。
机器人每次可以向下或向右移动。机器人要到达地图的右下角（终点）。
可以有多少种不同的路径从起点走到终点？
备注：m和n小于等于100,并保证计算结果在int范围内

数据范围：
0<n,m≤100，保证计算结果在32位整型范围内
要求：空间复杂度 O(nm)，时间复杂度 O(nm)
进阶：空间复杂度 O(1)，时间复杂度 O(min(n,m))
"""


def uniquePaths( m: int, n: int) -> int:
   dp = [[1] * n for _ in range(m)]

   for i in range(1, m):
       for j in range(1, n):
           dp[i][j] = dp[i-1][j] + dp[i][j-1]

   return dp[m-1][n-1]

print(uniquePaths(2,2))
print(uniquePaths(3,3))
print(uniquePaths(2,1))

"""
地图尺寸：m=2, n=2
DP表：
[
  [1, 1],
  [1, 2]
]

地图尺寸：m=3, n=3
DP表：
[
  [1, 1, 1],
  [1, 2, 3],
  [1, 3, 6]
]

地图尺寸：m=3, n=4
DP表：
[
  [1,  1,  1,  1],
  [1,  2,  3,  4],
  [1,  3,  6, 10]
]

地图尺寸：m=4, n=3
DP表：
[
  [1,  1,  1],
  [1,  2,  3],
  [1,  3,  6],
  [1,  4, 10]
]
"""